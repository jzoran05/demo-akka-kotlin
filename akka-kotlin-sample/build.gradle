plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'application'
    id 'com.bmuschko.docker-java-application' version '4.8.0'
}

group 'demo.akka.kotlin'
version '1.0'

repositories {
    mavenCentral()
}


dependencies {
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.22'
    compile group: 'com.typesafe.akka', name: 'akka-cluster_2.12', version: '2.5.22'
    compile group: 'com.typesafe.akka', name: 'akka-cluster-metrics_2.12', version: '2.5.22'
    compile group: 'com.lightbend.akka.management', name: 'akka-management_2.12', version: '0.19.0'
    compile group: 'com.lightbend.akka.management', name: 'akka-management-cluster-bootstrap_2.12', version: '0.19.0'
    //compile group: 'com.lightbend.akka.management', name: 'akka-management-cluster-http_2.12', version: '1.0.0'
    compile group: 'com.lightbend.akka.discovery', name: 'akka-discovery-dns_2.12', version: '0.19.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

application {
    mainClassName = 'sample.cluster.AkkaManagement.SimpleClusterApp'
}

jar {
    manifest { attributes "Main-Class": "sample.cluster.AkkaManagement.SimpleClusterApp"  }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

docker {
    javaApplication {
        baseImage = 'openjdk:8-jdk-alpine'
        ports = [8080, 8558, 2552]
        tag = 'akka-sample-cluster-kubernetes-dns-java:1.3.3.7'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}